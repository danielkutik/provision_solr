Aegir Apache Solr
=================

Installation
------------

You will need Aegir, a solr.war file, and Tomcat to use this tool.

### Aegir + Provision Solr

We assume you have setup Aegir, but if not head to
http://community.aegirproject.org/installing. I really recommend going through
the Manual Installation. It is not as hard as it sounds, and you will learn the
components of Aegir. Take the Plunge!

Once you've got aegir installed, get the Provision Solr drush project:

    drush dl provision_solr

### Solr

Next, get Apache Solr itself. Get a solr.war file from somewhere! You can
download the entire apachesolr tar.gz from Apache at
https://www.apache.org/dyn/closer.cgi/lucene/solr/.

All you need on your server is the solr.war file. Extract that folder someplace
temporary and get the solr.war file, located at
apache-solr-VERSION/example/webapps/solr.war.

Put this file on your server somewhere like /usr/share/solr-VERSION.war. We
recommend naming it with the version number, because each Aegir Server Entity
can utilize a specific WAR file. It doesn't matter where you put this file, as
long as you configure your server to point solr_war_path to that location.

Then, setup one of your Provision Server Entities (aka contexts, aka drush
aliases) with the Solr info:

    'solr_port' => '8080',
    'solr_restart_cmd' => 'sudo /etc/init.d/tomcat7 restart',
    'solr_app_path' => '/var/aegir/config/server_master/tomcat',
    'solr_war_path' => '/usr/share/solr-3.6.2.war',
    'solr_homes_path' => '/var/aegir/config/server_master/solr',

### Tomcat

Next, you need Tomcat. No other Solr server has been built as of yet, but
provision_solr is ready for it.

The following instructions have been thoroughly tested on ubuntu 12.04 LTS, but
tomcat is straightforward enough you should be able to adapt these instructions
to any system.

Install Tomcat7. It doesn't require anything else be installed first.

    sudo apt-get install tomcat7

Delete /etc/tomcat7/Catalina/localhost and replace with a symlink to
/var/aegir/config/tomcat:

    sudo rm -rf /etc/tomcat7/Catalina/localhost && ln -s /var/aegir/config/tomcat /etc/tomcat7/Catalina/localhost

This must happen pretty fast, as Tomcat usually replaces the Catalina/localhost
folder as soon as you delete it.

Aegir will now be able to write new Tomcat XML application files on the fly when
you create new Aegir Sites.

As a last step, you must add the Tomcat user to the Aegir group:

    sudo adduser tomcat7 aegir

This is so tomcat7 can read and write certain folders owned by Aegir.

### sudo

The aegir user needs to be able to restart Tomcat without a password. If you
have already installed Aegir this was done for the Apache restart command.

Read the instructions in the Manual Installation Handbook on sudo config. In
most Non-centos linux systems, you have a file at /etc/sudoers.d/aegir. Add this
line to that file:

    aegir ALL=NOPASSWD: /etc/init.d/tomcat7

### Front End: Hosting Solr

This module is much easier to use with the AEgir Hosting front-end companion,
Hosting Solr.

You can easily download and install hosting_solr with the following drush
commands:

    drush @hostmaster dl hosting_solr
    drush @hostmaster en hosting_solr